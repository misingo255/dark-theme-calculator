{"version":3,"sources":["components/Row.js","components/Button.js","components/calculator.js","App.js"],"names":["children","View","style","width","height","marginBottom","flexDirection","justifyContent","styles","StyleSheet","create","text","color","fontSize","fontWeight","textSecondary","button","backgroundColor","alignItems","buttonDouble","buttonSecondary","buttonAccent","onPress","size","theme","buttonStyles","textStyles","push","TouchableOpacity","Text","initialState","currentValue","operator","previousValue","calculator","type","value","state","length","handleNumber","current","parseFloat","previous","resetState","handleEqual","container","flex","textContainer","maxHeight","buttonContainer","textAlign","marginRight","App","handleTap","setState","this","toLocaleString","Row","Button","React","Component"],"mappings":"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","file":"static/js/app.cbd5cce8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nexport default ({ children }) => (\r\n  <View style={{width: \"100%\", height: \"20%\",marginBottom: \"1.15%\",flexDirection: \"row\", justifyContent: \"space-around\",}}>{children}</View>\r\n);\r\n","import React from \"react\";\r\nimport { TouchableOpacity, StyleSheet, Text, Dimensions } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n  },\r\n  textSecondary: {\r\n    color: \"#060606\"\r\n  },\r\n  button: {\r\n    backgroundColor: \"#333333\",\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonDouble: {\r\n    width: \"45%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // flex: 0,\r\n    // alignItems: \"flex-start\",\r\n    // paddingLeft: 40\r\n  },\r\n  buttonSecondary: {\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  buttonAccent: {\r\n    backgroundColor: \"#f09a36\"\r\n  }\r\n});\r\n\r\nexport default ({ onPress, text, size, theme }) => {\r\n  const buttonStyles = [styles.button];\r\n  const textStyles = [styles.text];\r\n\r\n  if (size === \"double\") {\r\n    buttonStyles.push(styles.buttonDouble);\r\n  }\r\n\r\n  if (theme === \"secondary\") {\r\n    buttonStyles.push(styles.buttonSecondary);\r\n    textStyles.push(styles.textSecondary);\r\n  } else if (theme === \"accent\") {\r\n    buttonStyles.push(styles.buttonAccent);\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress} style={buttonStyles}>\r\n      <Text style={textStyles}>{text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n","export const initialState = {\r\n  currentValue: \"0\",\r\n  operator: null,\r\n  previousValue: null\r\n};\r\n\r\nexport const handleNumber = (value, state) => {\r\n  if (state.currentValue === \"0\") {\r\n    return { currentValue: `${value}` };\r\n  }\r\n\r\n  if(state.currentValue.length == 10){\r\n    return { currentValue: \"0\" };\r\n  }\r\n\r\n  return {\r\n    currentValue: `${state.currentValue}${value}`\r\n  };\r\n};\r\n\r\nexport const handleEqual = state => {\r\n  const { currentValue, previousValue, operator } = state;\r\n\r\n  const current = parseFloat(currentValue);\r\n  const previous = parseFloat(previousValue);\r\n  const resetState = {\r\n    operator: null,\r\n    previousValue: null\r\n  };\r\n\r\n  if (operator === \"/\") {\r\n    return {\r\n      currentValue: previous / current,\r\n      ...resetState\r\n    };\r\n  }\r\n\r\n  if (operator === \"*\") {\r\n    return {\r\n      currentValue: previous * current,\r\n      ...resetState\r\n    };\r\n  }\r\n\r\n  if (operator === \"+\") {\r\n    return {\r\n      currentValue: previous + current,\r\n      ...resetState\r\n    };\r\n  }\r\n\r\n  if (operator === \"-\") {\r\n    return {\r\n      currentValue: previous - current,\r\n      ...resetState\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst calculator = (type, value, state) => {\r\n  switch (type) {\r\n    case \"number\":\r\n      return handleNumber(value, state);\r\n    case \"operator\":\r\n      return {\r\n        operator: value,\r\n        previousValue: state.currentValue,\r\n        currentValue: \"0\"\r\n      };\r\n    case \"equal\":\r\n      return handleEqual(state);\r\n    case \"clear\":\r\n      return initialState;\r\n    case \"posneg\":\r\n      return {\r\n        currentValue: `${parseFloat(state.currentValue) * -1}`\r\n      };\r\n    case \"percentage\":\r\n      return {\r\n        currentValue: `${parseFloat(state.currentValue) * 0.01}`\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default calculator;\r\n","import React from \"react\";\nimport { StyleSheet, Text, View} from \"react-native\";\n\nimport Row from \"./components/Row\";\nimport Button from \"./components/Button\";\nimport calculator, { initialState } from \"./components/calculator\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#045b62\",\n    width: \"100%\",\n    height: \"100%\",\n    \n  },\n\n  textContainer: {\n    width: \"100%\",\n    // height: \"20%\",\n    maxHeight: \"20%\",\n  },\n\n  buttonContainer:{\n    width: \"100%\",\n    height: \"70%\",\n  },\n\n  value: {\n    color: \"#fff\",\n    fontSize: 40,\n    textAlign: \"right\",\n    marginRight: 20,\n    marginBottom: 10,\n  }\n});\n\nexport default class App extends React.Component {\n  state = initialState;\n\n  handleTap = (type, value) => {\n    this.setState(state => calculator(type, value, state));\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n\n        <View style = {styles.textContainer}>\n          <Text style={styles.value}>\n            {parseFloat(this.state.currentValue).toLocaleString()}\n          </Text>\n        </View>\n\n        <View style = {styles.buttonContainer}>\n        <Row>\n            <Button\n              text=\"C\"\n              theme=\"secondary\"\n              onPress={() => this.handleTap(\"clear\")}\n            />\n            <Button\n              text=\"+/-\"\n              theme=\"secondary\"\n              onPress={() => this.handleTap(\"posneg\")}\n            />\n            <Button\n              text=\"%\"\n              theme=\"secondary\"\n              onPress={() => this.handleTap(\"percentage\")}\n            />\n            <Button\n              text=\"/\"\n              theme=\"accent\"\n              onPress={() => this.handleTap(\"operator\", \"/\")}\n            />\n          </Row>\n\n          <Row>\n            <Button text=\"7\" onPress={() => this.handleTap(\"number\", 7)} />\n            <Button text=\"8\" onPress={() => this.handleTap(\"number\", 8)} />\n            <Button text=\"9\" onPress={() => this.handleTap(\"number\", 9)} />\n            <Button\n              text=\"x\"\n              theme=\"accent\"\n              onPress={() => this.handleTap(\"operator\", \"*\")}\n            />\n          </Row>\n\n          <Row>\n            <Button text=\"4\" onPress={() => this.handleTap(\"number\", 4)} />\n            <Button text=\"5\" onPress={() => this.handleTap(\"number\", 5)} />\n            <Button text=\"6\" onPress={() => this.handleTap(\"number\", 6)} />\n            <Button\n              text=\"-\"\n              theme=\"accent\"\n              onPress={() => this.handleTap(\"operator\", \"-\")}\n            />\n          </Row>\n\n          <Row>\n            <Button text=\"1\" onPress={() => this.handleTap(\"number\", 1)} />\n            <Button text=\"2\" onPress={() => this.handleTap(\"number\", 2)} />\n            <Button text=\"3\" onPress={() => this.handleTap(\"number\", 3)} />\n            <Button\n              text=\"+\"\n              theme=\"accent\"\n              onPress={() => this.handleTap(\"operator\", \"+\")}\n            />\n          </Row>\n\n          <Row>\n            <Button text=\"0\" size = \"double\" onPress={() => this.handleTap(\"number\", 0)}/>\n            <Button text=\".\" onPress={() => this.handleTap(\"number\", \".\")} />\n            <Button text=\"=\" theme=\"accent\" onPress={() => this.handleTap(\"equal\")} />\n          </Row>\n        </View>\n          \n      </View>\n    );\n  }\n}\n"],"sourceRoot":""}